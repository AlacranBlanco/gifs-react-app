{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","React","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","console","log","categorie","type","value","onChange","val","target","getGifs","category","a","url","encodeURI","fetch","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+LAmCeA,EAhCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,IAAMC,SAAS,IAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAElB,GADAA,EAAEC,kBACEJ,EAAWK,OACX,OAAOC,QAAQC,IAAI,0BAEvBV,GAAc,SAAAW,GAAS,OAAKR,GAAL,mBAAoBQ,OAC3CP,EAAc,KAGd,SACI,uBACIQ,KAAK,OACLC,MAAOV,EACPW,SAAW,SAACR,GAAD,OAjBIS,EAiBqBT,EAAEU,OAAOH,WAhBrDT,EAAcW,GADQ,IAACA,Q,8BCPlBE,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,8DAGSI,MAAMF,GAHf,8BAGqBG,OAHrB,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QATvB,kBAaZK,GAbY,2CAAH,sDCYLO,EAVK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAE7B,OACI,sBAAKa,UAAU,6CAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCwBDO,EA3BC,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAGd,ECJwB,SAACA,GACzB,MAA0BjB,IAAMC,SAAS,CACrCsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAtC,IAAMuC,WAAU,WACZvB,EAAQC,GAAUuB,MAAK,SAAAX,GAAM,OAAIS,EAAS,CACtCf,KAAMM,EACNO,SAAS,SAEd,CAACnB,IAKGoB,EDZwBI,CAAaxB,GAAhCY,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACI,6BAAKnB,IAEFmB,GAAW,wCAEd,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,wBAAC,EAAD,2BACQA,GADR,IAEIgB,IAAKhB,EAAIC,eEOtBgB,EAzBM,WAEjB,MAAoC3C,IAAMC,SAAU,CAAC,YAArD,mBAAO2C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWnB,KAAI,SAACR,GAAD,OACX,cAAC,EAAD,CACIA,SAAUA,GACLA,Y,MCbjC4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.792e4c0c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = React.useState('')\r\n    \r\n    const handlerInputCange = (val) => {\r\n        setInputValue(val)\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(!inputValue.trim())\r\n            return console.log('El campo estÃ¡ vacio');\r\n\r\n        setCategories(categorie => [inputValue, ...categorie]);\r\n        setInputValue('');\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ (e) => handlerInputCange(e.target.value)}\r\n            />\r\n            {/* <button onClick={() => addCategorie()}>Agregar</button> */}\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async (category) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=5&api_key=l8mcaq2YW5z1j5uCieFyhQbCF3ODR34F`;\r\n    const {data} = await (await fetch(url)).json();\r\n    \r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n    \r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n   \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n           {\r\n               loading && <p>Loading</p>\r\n           }\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                            {...img}\r\n                            key={img.id}\r\n                        />\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = React.useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        getGifs(category).then(images => setState({\r\n            data: images,\r\n            loading: false\r\n        }));\r\n    }, [category])\r\n\r\n   \r\n    \r\n\r\n    return state;\r\n}","import React from 'react'\r\nimport AddCategory from './components/AddCategory.jsx'\r\nimport GifGrid from './components/GifGrid.jsx'\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = React.useState( ['Simpson'])\r\n  \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((category) => (\r\n                        <GifGrid \r\n                            category={category}\r\n                            key={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp.jsx';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}